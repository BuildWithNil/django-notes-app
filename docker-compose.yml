version: "3.8"

services:
  nginx:
    build: ./nginx
    image: nginx:latest
    container_name: nginx_cont
    ports:
      - "80:80"
    restart: always
    depends_on:
      - django_app
    networks:
      - notes-app-nw
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro

  django_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: django_app:latest
    container_name: django_cont
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn notesapp.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - ".env"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - notes-app-nw

  db:
    image: mysql:8.0
    container_name: db_cont
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./data/mysql/db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u${MYSQL_USER} -p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - notes-app-nw

networks:
  notes-app-nw:

volumes:
  static_volume:
  media_volume:
